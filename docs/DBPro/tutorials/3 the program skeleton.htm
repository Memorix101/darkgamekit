<html>
<head>
<title>DarkBASIC Professional Help File</title>
</head>
<body background="..\gfx\dbpro_bg.jpg">
<!-- Page Header -->
<center><table width="340" border="0" cellpadding="0" cellspacing="0">
<tr>
	<td><img src="..\gfx\dbph_head_1.jpg" width="102" height="51"></td>
	<td><a href="..\main.htm"><img src="..\gfx\dbph_head_2.jpg" width="47" height="51" border="0"></a></td>
	<td><a href="..\commands.htm"><img src="..\gfx\dbph_head_3.jpg" width="50" height="51" border="0"></a></td>
	<td><a href="..\examples.htm"><img src="..\gfx\dbph_head_4.jpg" width="47" height="51" border="0"></a></td>
	<td><a href="..\documents.htm"><img src="..\gfx\dbph_head_5.jpg" width="46" height="51" border="0"></a></td>
	<td><a href="..\index.htm"><img src="..\gfx\dbph_head_6.jpg" width="56" height="51" border="0"></a></td>
</tr>
</table></center>
<font face="Verdana">
<table width="100%" border="0" cellpadding="0" cellspacing="0">
<tr><td>
<BR>
<BR>
<B><FONT SIZE=3><CENTER><FONT SIZE=3>TUTORIAL THREE<BR>
The Program Skeleton<BR>
</FONT></CENTER></FONT></B><BR>
The skeleton of the program is the first thing you will be thinking about after the design stage. Most game skeletons are very similar and include the following. A setup stage to load and prepare your objects. A main loop to run your game logic and a cleanup stage where all the loaded media is released.<BR>
<BR>
</td></tr></table><CENTER>
<IMG SRC=gfx\tutorial3.jpg><BR>
</CENTER><br><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr><td>
<BR>
In Dark Basic Professional you only have to concern yourself with the first two in most cases. All media loaded is released automatically when you leave a Dark Basic Professional program. The first and second stages are very easy to visualise and can be coded in the following two steps. You must first create your setup stage:<BR>
<BR>
<PRE><FONT FACE=courier COLOR=BLUE>rem TUT3A
rem Initial settings
sync on : sync rate 100
backdrop off : hide mouse

rem Load all media for game
gosub _load_game

rem Setup all objects for game
gosub _setup_game
</FONT></PRE>You then create the main loop and any calls you will make over and over again to control the elements within your game:<BR>
<BR>
<PRE><FONT FACE=courier COLOR=BLUE>rem TUT3B
rem Game loop
do

 rem Control game elements
 gosub _control_player
 gosub _control_gunandbullet
 gosub _control_enemies

 rem Update screen
 sync

rem End loop
loop
</FONT></PRE>The last step is to create all the subroutines that the first two stages call. Subroutines are blocks of code you can jump to in order to execute instructions that achieve a subtask. A subtask could be something like loading the player, controlling the player, deleting the player and so on. It is easier to understand what a subroutine does when given a useful name:<BR>
<BR>
<PRE><FONT FACE=courier COLOR=BLUE>rem TUT3C
_control_player:
return

_control_gunandbullet:
return

_control_enemies:
return

_control_stats:
return

_setup_game:
return

_load_game:
return
</FONT></PRE>As you can see, each subroutine has a name that describes what it does. At the moment they are all empty and contain no code. Later on in the tutorial we shall fill these subroutines with commands.<BR>
<BR>
<BR>
CLICK <A HREF=..\main.htm>HERE</A> TO GO TO THE MAIN MENU<BR>
<BR>
<BR>
</td></tr></table>
<br>
<!-- Page Footer -->
<table width="100%" border="0" cellpadding="0" cellspacing="0">
<tr>
	<td align="center"><img src="..\gfx\dbph_foot_1.jpg" width="340" height="38"></td>
</tr>
</table>
</body>
</html>
